@model LMS.DATA.EF.Lesson

@{
    ViewBag.Title = "Create Lesson";
}

<div id="wrapper">
    <div class="container">
        <div class="row login-wrapper lesson-create__grid">
            <div>
                <div class="panel panel-login">
                    <div class="panel-heading">
                        <div class="row">
                            <div>
                                <a href="#" class="active" id="login-form-link">Create Lesson</a>
                            </div>
                        </div>
                        <hr>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-lg-12">
                                @using (Html.BeginForm("Create", "Lesson", FormMethod.Post, new { enctype = "multipart/form-data" }))
                                {
                                    @Html.AntiForgeryToken()

                                    <div class="form-horizontal">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.LessonTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.LessonTitle, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.LessonTitle, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class = "control-label col-md-2">Course</label>
                                            <div class="col-md-10">
                                                @Html.DropDownList("CourseId", null, "-- Select --" , htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Introduction, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Introduction, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Introduction, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.VideoURL, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.VideoURL, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.VideoURL, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.PdfFilename, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                <input type="file" name="pdfFile" accept=".pdf" />
                                                @*@Html.EditorFor(model => model.PdfFilename, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PdfFilename, "", new { @class = "text-danger" })*@
                                                <!-- TODO: deleted commented code -->
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                <div class="checkbox">
                                                    @Html.EditorFor(model => model.IsActive)
                                                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div>
                                                <input type="submit" value="Create" class="form-control btn btn-default" />
                                            </div>
                                            <br />
                                            <a href="@Url.Action("Admin", "Reports")" class="btn btn-primary"><i class="fa fa-arrow-left"></i> Go Back</a>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
